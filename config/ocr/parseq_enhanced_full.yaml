# ========================================
# Enhanced PARSeq - Configuração Completa
# Pipeline robusto com multi-linha, ensemble, reranking e fine-tuning
# ========================================

name: parseq_enhanced_full

# ========================================
# 1. MODELO BASE
# ========================================
model_name: parseq_tiny  # 'parseq_tiny', 'parseq', 'parseq_patch16_224'
device: cuda  # 'cuda' ou 'cpu'
img_height: 32
img_width: 128
max_length: 25
batch_size: 1

# ========================================
# 2. PIPELINE FEATURES
# ========================================
# Controle fino de cada componente
enable_line_detection: true       # Detectar e separar linhas de texto
enable_geometric_norm: true       # Normalização geométrica (deskew, perspective)
enable_photometric_norm: true     # Normalização fotométrica (CLAHE, denoise)
enable_ensemble: true             # Ensemble de variantes + reranking
enable_postprocessing: true       # Pós-processamento contextual

# Estratégia de ensemble
ensemble_strategy: rerank  # 'confidence', 'voting', 'rerank', 'none'

# ========================================
# 3. LINE DETECTOR
# ========================================
line_detector:
  # Método de detecção de linhas
  method: hybrid  # 'projection', 'clustering', 'morphology', 'hybrid'
  
  # Parâmetros de clustering (DBSCAN)
  min_line_height: 10       # Altura mínima de linha (pixels)
  max_line_gap: 5           # Gap máximo entre componentes da mesma linha
  dbscan_eps: 15            # Raio DBSCAN para agrupar componentes
  
  # Parâmetros de componentes
  min_component_width: 5    # Largura mínima de componente (pixels)
  
  # Parâmetros de morfologia
  morphology_kernel_width: 50  # Largura do kernel morfológico
  
  # Filtros adicionais
  filter_noise: true        # Filtrar componentes muito pequenos
  min_char_count: 2         # Mínimo de caracteres por linha válida

# ========================================
# 4. GEOMETRIC NORMALIZER
# ========================================
geometric_normalizer:
  # Correção de rotação (deskew)
  enable_deskew: true
  max_angle: 10             # Ângulo máximo de correção (graus)
  deskew_method: hough      # 'hough', 'moments', 'projection'
  
  # Correção de perspectiva
  enable_perspective: false # ⚠️ Pode ser agressivo em alguns casos
  perspective_method: auto  # 'auto', 'manual'
  
  # Redimensionamento multi-escala
  target_heights: [32, 64]  # Múltiplas alturas para variantes de ensemble
  maintain_aspect: true     # Manter aspect ratio original
  
  # Padding
  add_padding: true
  padding_ratio: 0.1        # 10% de padding em cada lado

# ========================================
# 5. PHOTOMETRIC NORMALIZER
# ========================================
photometric_normalizer:
  # Denoise (remoção de ruído)
  denoise_method: bilateral  # 'median', 'bilateral', 'none'
  bilateral_d: 5            # Diâmetro do filtro bilateral
  bilateral_sigma_color: 75
  bilateral_sigma_space: 75
  
  # Remoção de sombras
  shadow_removal: true
  shadow_kernel_size: 15
  
  # CLAHE (Contrast Limited Adaptive Histogram Equalization)
  clahe_enabled: true
  clahe_clip_limit: 1.5     # Recomendado: 1.2-1.6 (maior = mais contraste)
  clahe_tile_grid: [8, 8]   # Grid de tiles ([8,8] padrão, [4,4] para imagens pequenas)
  
  # Sharpening (nitidez)
  sharpen_enabled: false    # Ativar se texto muito fino ou desfocado
  sharpen_strength: 0.3     # 0.1-0.5 (maior = mais nitidez)
  sharpen_kernel_size: 3
  
  # Binarização
  binarize_enabled: false   # Opcional, geralmente não necessário
  binarize_method: otsu     # 'otsu', 'adaptive'
  
  # Inversão de cores (útil para texto claro em fundo escuro)
  auto_invert: true         # Detectar e inverter automaticamente

# ========================================
# 6. ENSEMBLE & RERANKING
# ========================================
ensemble:
  # Número de variantes por linha
  num_variants: 3           # Quantas variantes gerar (2-5 recomendado)
  
  # Tipos de variantes
  variant_types:
    - height              # Diferentes alturas (32, 64)
    - clahe              # Diferentes níveis de CLAHE (1.0, 1.5, 2.0)
    - denoise            # Com/sem denoise
  
  # Estratégia de reranking
  reranker:
    method: weighted      # 'weighted', 'ml_based', 'rule_based'
    
    # Pesos para cada feature (weighted reranking)
    weights:
      confidence: 0.35    # Confiança do modelo
      length_ratio: 0.15  # Razão de comprimento esperado
      dict_match: 0.25    # Match com dicionário/padrões
      consensus: 0.25     # Consenso entre variantes
    
    # Dicionário de termos esperados (opcional)
    expected_terms:
      - "LOTE"
      - "VALIDADE"
      - "FABRICACAO"
      - "FAB"
      - "VAL"
    
    # Padrões regex esperados (opcional)
    expected_patterns:
      - 'LOT[EO]?\s*\.?\s*\d+'           # LOTE 123
      - '\d{1,2}[/-]\d{1,2}[/-]\d{2,4}'  # Datas
      - '[A-Z]{2,}\s*\d+'                # VAL 123, FAB 456

# ========================================
# 7. CONTEXTUAL POSTPROCESSOR
# ========================================
postprocessor:
  # Transformações básicas
  uppercase: true           # Converter para maiúsculas
  remove_symbols: false     # Remover símbolos (false para preservar / - . :)
  trim_whitespace: true
  
  # Mapeamento de ambiguidades (O↔0, I↔1, etc)
  ambiguity_mapping: true
  ambiguity_rules:
    - ['O', '0', 'context']  # Decidir por contexto
    - ['I', '1', 'context']
    - ['S', '5', 'context']
    - ['Z', '2', 'context']
  
  # Correção de formatos esperados
  fix_formats: true
  expected_formats:
    # Lotes
    - pattern: 'LOT[EO]?\s*\.?\s*\d+'
      example: "LOTE 12345"
      priority: high
    
    # Datas
    - pattern: '\d{1,2}[/-]\d{1,2}[/-]\d{2,4}'
      example: "12/06/2025"
      priority: high
    
    # Códigos
    - pattern: '[A-Z]{2,}\s*\d+'
      example: "VAL 123"
      priority: medium
  
  # Fuzzy matching (opcional, requer Levenshtein)
  fuzzy_matching: true
  fuzzy_threshold: 0.8      # Limiar de similaridade (0-1)
  fuzzy_dict:
    - "LOTE"
    - "VALIDADE"
    - "FABRICACAO"
  
  # Correções específicas do domínio
  domain_corrections:
    enabled: true
    rules:
      - from: "L0TE"
        to: "LOTE"
      - from: "VAL1DADE"
        to: "VALIDADE"
      - from: "FABRlCACAO"  # l minúsculo → I maiúsculo
        to: "FABRICACAO"

# ========================================
# 8. FINE-TUNING (Treinamento)
# ========================================
fine_tuning:
  enabled: false            # Habilitar fine-tuning
  
  # Dataset
  train_data_path: "data/ocr_train"
  val_data_path: "data/ocr_val"
  annotation_format: "json"  # 'json', 'txt', 'csv'
  
  # Hiperparâmetros de treinamento
  learning_rate: 1e-4
  batch_size: 32
  num_epochs: 50
  warmup_steps: 500
  
  # Scheduler
  scheduler: cosine         # 'cosine', 'linear', 'step'
  min_lr: 1e-6
  
  # Otimizador
  optimizer: adamw          # 'adam', 'adamw', 'sgd'
  weight_decay: 0.01
  
  # Regularização
  dropout: 0.1
  label_smoothing: 0.1
  
  # Early stopping
  early_stopping:
    enabled: true
    patience: 5
    monitor: val_cer        # 'val_cer', 'val_wer', 'val_loss'
    min_delta: 0.001
  
  # Checkpoint
  save_best_only: true
  checkpoint_dir: "models/parseq_finetuned"
  
  # Mixed precision training (para GPU)
  mixed_precision: true     # FP16 training (mais rápido)
  
  # Gradient accumulation (para batch size efetivo maior)
  gradient_accumulation_steps: 1

# ========================================
# 9. DATA AUGMENTATION (para fine-tuning)
# ========================================
augmentation:
  enabled: false            # Habilitar augmentation durante fine-tuning
  
  # Augmentações geométricas
  geometric:
    rotation:
      enabled: true
      max_angle: 5          # ±5 graus
    
    perspective:
      enabled: true
      strength: 0.1         # 0-1 (0.1 = leve)
    
    shear:
      enabled: true
      max_shear: 0.1        # ±0.1 radianos
    
    scale:
      enabled: true
      min_scale: 0.9
      max_scale: 1.1
  
  # Augmentações fotométricas
  photometric:
    brightness:
      enabled: true
      factor: 0.2           # ±20%
    
    contrast:
      enabled: true
      factor: 0.2           # ±20%
    
    blur:
      enabled: true
      kernel_range: [3, 5]  # Tamanho do kernel
      probability: 0.3      # 30% chance
    
    noise:
      enabled: true
      noise_type: gaussian  # 'gaussian', 'salt_pepper'
      std: 0.01             # Desvio padrão do ruído
      probability: 0.2
    
    jpeg_compression:
      enabled: true
      quality_range: [70, 95]
      probability: 0.3
  
  # Probabilidade de aplicar cada augmentation
  apply_probability: 0.5    # 50% chance de aplicar augmentation

# ========================================
# 10. SYNTHETIC DATA GENERATION
# ========================================
synthetic_data:
  enabled: false            # Gerar dados sintéticos
  
  # Fontes de texto
  text_sources:
    - type: template
      templates:
        - "LOTE {number}"
        - "VAL {date}"
        - "FAB {date}"
      number_range: [1, 99999]
      date_format: "%d/%m/%Y"
  
  # Renderização
  rendering:
    fonts:
      - "Arial"
      - "Helvetica"
      - "Courier New"
      - "Times New Roman"
    font_sizes: [16, 20, 24, 28, 32]
    
    # Backgrounds
    backgrounds:
      - type: solid
        colors: [[255, 255, 255], [240, 240, 240]]
      
      - type: texture
        texture_dir: "data/textures"
    
    # Degradações
    degradations:
      - blur: [0.5, 2.0]
      - noise: [0.01, 0.05]
      - jpeg: [60, 90]
  
  # Quantidade
  num_samples: 10000
  output_dir: "data/ocr_synthetic"

# ========================================
# 11. EVALUATION & METRICS
# ========================================
evaluation:
  # Métricas principais
  metrics:
    - cer                   # Character Error Rate
    - wer                   # Word Error Rate
    - accuracy              # Exact match accuracy
    - confidence            # Média de confiança
  
  # Métricas por categoria (opcional)
  per_category_metrics: true
  categories:
    - dates
    - lots
    - codes
  
  # Análise de erros
  error_analysis:
    enabled: true
    output_dir: "outputs/error_analysis"
    
    # Tipos de erros a rastrear
    track_errors:
      - substitution
      - insertion
      - deletion
      - case_error
      - format_error
  
  # Benchmark contra baseline
  compare_baseline: true
  baseline_config: "config/ocr/parseq_base.yaml"

# ========================================
# 12. LOGGING & MONITORING
# ========================================
logging:
  level: INFO               # DEBUG, INFO, WARNING, ERROR
  log_file: "logs/parseq_enhanced.log"
  
  # Verbose output
  verbose: true
  show_progress: true
  
  # Visualizações
  save_visualizations: true
  viz_output_dir: "outputs/visualizations"
  
  # Rastreamento de experimentos (opcional)
  experiment_tracking:
    enabled: false
    backend: tensorboard    # 'tensorboard', 'wandb', 'mlflow'
    project_name: "parseq_enhanced"
    run_name: "experiment_001"

# ========================================
# 13. PERFORMANCE & OPTIMIZATION
# ========================================
performance:
  # Multi-threading
  num_workers: 4            # Número de threads para processamento paralelo
  
  # Caching
  cache_preprocessed: true  # Cache de imagens pré-processadas
  cache_dir: "cache/parseq"
  
  # Batch processing
  batch_inference: true     # Processar múltiplas imagens em batch
  optimal_batch_size: 8     # Batch size ótimo (ajustar por GPU)
  
  # GPU optimization
  gpu_memory_fraction: 0.8  # Fração de memória GPU a usar
  allow_growth: true        # Permitir crescimento dinâmico de memória

# ========================================
# 14. EXPERIMENT MODES
# ========================================
# Modos pré-configurados para diferentes cenários

presets:
  # Modo rápido (para testes)
  fast:
    enable_line_detection: true
    enable_geometric_norm: true
    enable_photometric_norm: false
    enable_ensemble: false
    ensemble_strategy: none
  
  # Modo balanceado (padrão)
  balanced:
    enable_line_detection: true
    enable_geometric_norm: true
    enable_photometric_norm: true
    enable_ensemble: true
    ensemble_strategy: rerank
    num_variants: 3
  
  # Modo máxima qualidade (mais lento)
  high_quality:
    enable_line_detection: true
    enable_geometric_norm: true
    enable_photometric_norm: true
    enable_ensemble: true
    ensemble_strategy: rerank
    num_variants: 5
    model_name: parseq_patch16_224  # Modelo maior
  
  # Modo ablation (para estudos)
  ablation:
    run_all_combinations: true
    components:
      - line_detection
      - geometric_norm
      - photometric_norm
      - ensemble
      - postprocessing

# ========================================
# 15. ACTIVE PRESET (selecionar qual usar)
# ========================================
active_preset: balanced     # 'fast', 'balanced', 'high_quality', 'ablation', null
